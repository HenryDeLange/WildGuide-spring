{
    "openapi": "3.1.0",
    "info": {
        "title": "WildGuide API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Entries",
            "description": "Manage Guide Entries."
        },
        {
            "name": "WildGuide Version",
            "description": "Version information about the WildGuide server."
        },
        {
            "name": "User Authentication",
            "description": "Manage Users."
        },
        {
            "name": "Guides",
            "description": "Manage Guides."
        }
    ],
    "paths": {
        "/guides/{guideId}": {
            "get": {
                "tags": [
                    "Guides"
                ],
                "summary": "Find a specific Guide associated with the User (owner, member or public).",
                "operationId": "findGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Guides"
                ],
                "summary": "Update a specific Guide.",
                "operationId": "updateGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuideBase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guides"
                ],
                "summary": "Delete a specific Guide.",
                "operationId": "deleteGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/guides/{guideId}/entries/{entryId}": {
            "get": {
                "tags": [
                    "Entries"
                ],
                "summary": "Find a specific Entry associated with the specified Guide.",
                "operationId": "findEntry",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entry"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Entries"
                ],
                "summary": "Update a specific Entry associated with the specified Guide.",
                "operationId": "updateEntry",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntryBase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entry"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entries"
                ],
                "summary": "Delete a specific Entry associated with the specified Guide.",
                "operationId": "deleteEntry",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Register (create) a new User.",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tokens"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/refresh": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Request a new pair of access and refresh tokens.",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tokens"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Login as an existing User in order to get a pair of access and refresh tokens.",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tokens"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides": {
            "get": {
                "tags": [
                    "Guides"
                ],
                "summary": "Find all Guides associated with the User (owner, member or public).",
                "operationId": "findGuides",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedGuide"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Guides"
                ],
                "summary": "Create a new Guide.",
                "operationId": "createGuide",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuideBase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guide"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides/{guideId}/owners/{ownerId}": {
            "post": {
                "tags": [
                    "Guides"
                ],
                "summary": "Join a specific Guide as an Owner.",
                "operationId": "ownerJoinGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guides"
                ],
                "summary": "Leave a specific Guide as an Owner.",
                "operationId": "ownerLeaveGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ownerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides/{guideId}/members/{memberId}": {
            "post": {
                "tags": [
                    "Guides"
                ],
                "summary": "Join a specific Guide as a Member.",
                "operationId": "memberJoinGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "memberId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guides"
                ],
                "summary": "Leave a specific Guide as a Member.",
                "operationId": "memberLeaveGuide",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "memberId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides/{guideId}/entries": {
            "get": {
                "tags": [
                    "Entries"
                ],
                "summary": "Find all Entries associated with the Guide.",
                "operationId": "findEntries",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagedEntry"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Entries"
                ],
                "summary": "Create a new Entry associated with the specified Guide.",
                "operationId": "createEntry",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntryBase"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "WildGuide Version"
                ],
                "summary": "Get server version and Git information.",
                "operationId": "getVersion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Version"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "tags": [
                    "User Authentication"
                ],
                "summary": "Find User information (in particular the ID) based on the provided Username.",
                "operationId": "findUserInfo",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides/{guideId}/owners": {
            "get": {
                "tags": [
                    "Guides"
                ],
                "summary": "Find the Owners for a specific Guide.",
                "operationId": "findGuideOwners",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuideLinkedUser"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guides/{guideId}/members": {
            "get": {
                "tags": [
                    "Guides"
                ],
                "summary": "Find the Members for a specific Guide.",
                "operationId": "findGuideMembers",
                "parameters": [
                    {
                        "name": "guideId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuideLinkedUser"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GuideBase": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 4
                    },
                    "summary": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE"
                        ]
                    },
                    "inaturalistCriteria": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "visibility"
                ]
            },
            "Guide": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 4
                    },
                    "summary": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE"
                        ]
                    },
                    "inaturalistCriteria": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "visibility"
                ]
            },
            "EntryBase": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "scientificName": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 3
                    },
                    "scientificRank": {
                        "type": "string",
                        "enum": [
                            "FAMILY",
                            "SUBFAMILY",
                            "TRIBE",
                            "SUBTRIBE",
                            "GENUS",
                            "SUBGENUS",
                            "SPECIES",
                            "SUBSPECIES",
                            "VARIETY_FORM_ABERRATION"
                        ]
                    },
                    "summary": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "inaturalistTaxon": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "name",
                    "scientificName",
                    "scientificRank"
                ]
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                    },
                    "scientificName": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 3
                    },
                    "scientificRank": {
                        "type": "string",
                        "enum": [
                            "FAMILY",
                            "SUBFAMILY",
                            "TRIBE",
                            "SUBTRIBE",
                            "GENUS",
                            "SUBGENUS",
                            "SPECIES",
                            "SUBSPECIES",
                            "VARIETY_FORM_ABERRATION"
                        ]
                    },
                    "summary": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "inaturalistTaxon": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "guideId": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "guideId",
                    "id",
                    "name",
                    "scientificName",
                    "scientificRank"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 4
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 8
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "Tokens": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 2147483647,
                        "minLength": 4
                    },
                    "accessToken": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessToken",
                    "refreshToken",
                    "userId",
                    "username"
                ]
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 4
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 8
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "Version": {
                "type": "object",
                "properties": {
                    "appVersion": {
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "commitId": {
                        "type": "string"
                    },
                    "commitTime": {
                        "type": "string"
                    },
                    "buildTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "appVersion",
                    "branch",
                    "buildTime",
                    "commitId",
                    "commitTime"
                ]
            },
            "UserInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 4
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "PagedGuide": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Guide"
                        }
                    }
                },
                "required": [
                    "data",
                    "pageNumber",
                    "pageSize",
                    "totalRecords"
                ]
            },
            "GuideLinkedUser": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 4
                    }
                },
                "required": [
                    "userId",
                    "username"
                ]
            },
            "PagedEntry": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalRecords": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Entry"
                        }
                    }
                },
                "required": [
                    "data",
                    "pageNumber",
                    "pageSize",
                    "totalRecords"
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}